apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: thanos
data:
  prometheus.yaml.tmpl: |
    global:
      scrape_interval: 15s
      scrape_timeout: 15s
      external_labels:
        cluster: prometheus-ha
        replica: $(POD_NAME)

    rule_files:
    - /etc/prometheus/rules/*.yaml

    scrape_configs:
    - job_name: 'ipt-k8s-node1'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.214:31672'
        labels:
          hostname: 'ipt-k8s-node1'
          instance: '10.99.104.214:31672'

    - job_name: 'ipt-k8s-node2'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.219:31672'
        labels:
          hostname: 'ipt-k8s-node2'
          instance: '10.99.104.219:31672'

    - job_name: 'ipt-k8s-node3'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.241:31672'
        labels:
          hostname: 'ipt-k8s-node3'
          instance: '10.99.104.241:31672'

    - job_name: 'ipt-k8s-node4'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.250:31672'
        labels:
          hostname: 'ipt-k8s-node4'
          instance: '10.99.104.250:31672'

    - job_name: 'vagrant-server'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.251:9100'
        labels:
          hostname: 'vagrant-server'
          instance: '10.99.104.251:9100'

    - job_name: 'ipt-gitlab'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.242:9100'
        labels:
          hostname: 'ipt-gitlab'
          instance: '10.99.104.242:9100'

    - job_name: 'IPT-SIT-BACKUP'
      metrics_path: /metrics
      static_configs:
      - targets:
        - '10.99.104.243:9100'
        labels:
          hostname: 'IPT-SIT-BACKUP'
          instance: '10.99.104.243:9100'

    - job_name: 'mongodb-cluster'
      metrics_path: /metrics
      static_configs:
      - targets:
        - 'mongo-exporter.kube-monitor.svc.cluster.local:9104'
        labels:
          hostname: 'mongodb-cluster'
          instance: 'mongo-exporter.kube-monitor.svc.cluster.local:9104'
      metric_relabel_configs:
      - source_labels: [mongodb_up]
        regex: (.+)
        target_label: up
        action: replace

    - job_name: 'redis-cluster'
      metrics_path: /metrics
      static_configs:
      - targets: [
          'redis-app-0.redis-headless.kube-ops.svc.cluster.local:9121',
          'redis-app-1.redis-headless.kube-ops.svc.cluster.local:9121',
          'redis-app-2.redis-headless.kube-ops.svc.cluster.local:9121',
          'redis-app-3.redis-headless.kube-ops.svc.cluster.local:9121',
          'redis-app-4.redis-headless.kube-ops.svc.cluster.local:9121',
          'redis-app-5.redis-headless.kube-ops.svc.cluster.local:9121'
        ]
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance

    - job_name: 'es-service-kube-monitor'
      metrics_path: /metrics
      static_configs:
      - targets:
        - 'elastic-exporter.kube-monitor.svc.cluster.local:9114'
        labels:
          service: elasticsearch
      relabel_configs:
      - source_labels: [__address__]
        regex: '(.*)\:9114'
        target_label: 'instance'
        replacement: '$1'
      - source_labels: [__address__]
        regex: '.*\.(.*)\.lan.*'
        target_label: 'environment'
        replacement: '$1'

    - job_name: 'kubernetes-etcd'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/k8s-certs/etcd/ca.pem
        cert_file: /var/run/secrets/kubernetes.io/k8s-certs/etcd/server.pem
        key_file: /var/run/secrets/kubernetes.io/k8s-certs/etcd/server-key.pem
      metrics_path: /metrics
      static_configs:
      - targets: ['10.99.104.214:2379','10.99.104.219:2379','10.99.104.241:2379']

    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: 'kubernetes-cadvisor'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+);(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_service_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kubernetes-services'
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module: [http_2xx]
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox-exporter.kube-monitor.svc.cluster.local:9115
      - source_labels: [__param_target]
        target_label: instance


    - job_name: 'kubernetes-ingresses'
      kubernetes_sd_configs:
      - role: ingress
      relabel_configs:
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox-exporter.kube-monitor.svc.cluster.local:9115
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_ingress_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: kubernetes_name

    - job_name: "kubernetes-service-dns"
      metrics_path: /probe
      params:
        module: [dns]
      static_configs:
      - targets:
        - kube-dns.kube-system:53
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter.kube-monitor.svc.cluster.local:9115

    - job_name: 'kubernetes-kubelet'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
